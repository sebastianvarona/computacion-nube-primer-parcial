version: '3.8'

services:
  consul:
    image: consul:1.15.3
    container_name: consul-server
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: >
      consul agent -server -ui -node=server-1 -bootstrap-expect=1
      -client=0.0.0.0 -bind=0.0.0.0 -data-dir=/consul/data
    volumes:
      - consul_data:/consul/data
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: microservices_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: frontend-service
    ports:
      - "5001:5001"
    depends_on:
      consul:
        condition: service_healthy
      microusers:
        condition: service_started
      microproducts:
        condition: service_started
      microorders:
        condition: service_started
    environment:
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    networks:
      - microservices-network

  microusers:
    build:
      context: .
      dockerfile: ./microUsers/Dockerfile
    container_name: microusers-service
    ports:
      - "5002:5002"
    depends_on:
      consul:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=microservices_db
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVICE_NAME=microusers
      - SERVICE_PORT=5002
    networks:
      - microservices-network

  microproducts:
    build:
      context: .
      dockerfile: ./microProducts/Dockerfile
    container_name: microproducts-service
    ports:
      - "5003:5003"
    depends_on:
      consul:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=microservices_db
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVICE_NAME=microproducts
      - SERVICE_PORT=5003
    networks:
      - microservices-network

  microorders:
    build:
      context: .
      dockerfile: ./microOrders/Dockerfile
    container_name: microorders-service
    ports:
      - "5004:5004"
    depends_on:
      consul:
        condition: service_healthy
      db:
        condition: service_healthy
      microproducts:
        condition: service_started
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=microservices_db
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVICE_NAME=microorders
      - SERVICE_PORT=5004
    networks:
      - microservices-network

volumes:
  mysql_data:
  consul_data:

networks:
  microservices-network:
    driver: bridge